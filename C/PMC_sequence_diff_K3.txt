57
0: LOAD @ 80 //licznik liczb w zbiorze wyjsciowym
1: STORE . 70
2: LOAD @ 80 // licznik konca zbioru 1
3: STORE . 74
4: LOAD @ 80 // licznik konca zbioru 2
5: STORE . 75
6: LOAD . 81 //chodzenie po pierwszym zbiorze
7: STORE . 71
8: LOAD . 81
9: ADD @ 80
10: STORE . 72 // chodzenie po drugim zbiorze
11: LOAD @ 70 // B - begin; jaki jest bierzacy wynik tego co zostalo w zbiorach
12: STORE . 79
13: LOAD @ 74
14: JZERO . 56 // jesli koniec zbioru 1 to zakoncz program
15: STORE . 74
16: LOAD @ 75
17: JZERO . 56 // jesli koniec zbioru 2 to zakoncz program
18: STORE. 75
19: LOAD * 71
20: SUB * 72
21: JZERO . 31 // jump do Z
22: JNEG . 48 // jump do N
23: STORE . 73 // cofniecie ruchu
24: LOAD @ 72 // idz na kolejne pole zbioru 2
25: ADD . 1
26: STORE . 72
27: LOAD @ 75 // kontrola konca zbioru 2
28: SUB . 1
29: STORE . 75
30: JUMP . 11 // wroc do poczatku B
31: STORE . 73 // Z
32: LOAD @ 70 // jesli zero to zmniejsz licznik o jeden
33: SUB . 1
34: STORE . 70
35: LOAD @ 71 // idz na kolejne pole w kazdym ze zbior√≥w
36: ADD . 1
37: STORE . 71
38: LOAD @ 72
39: ADD . 1
40: STORE . 72
41: LOAD @ 74 // kontrola obu koncow
42: SUB . 1
43: STORE . 74
44: LOAD @ 75
45: SUB . 1
46: STORE . 75
47: JUMP . 11 // jump do begin B
48: STORE . 73 // N - jesli neg (pierwszy - drugi zbior < 0) idz dalej w pierwszym ciagu
49: LOAD @ 71
50: ADD . 1
51: STORE . 71
52: LOAD @ 74 // kontrola konca zbioru 1
53: SUB . 1
54: STORE . 74
55: JUMP . 11 // jump B
56: STOP . 0 // S